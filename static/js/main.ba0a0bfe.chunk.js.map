{"version":3,"sources":["components/catalog/index.module.scss","App/index.module.scss","components/header/index.module.scss","components/markdown_render/index.module.scss","components/footer/index.module.scss","components/content/index.module.scss","serviceWorker.ts","components/catalog/index.tsx","components/header/index.tsx","components/markdown_render/index.tsx","components/content/index.tsx","components/footer/index.tsx","App/index.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Catalog","className","styles","content","posts","map","post","index","container","id","Header","header","CodeBlock","code","node","inline","children","props","exec","style","vscDarkPlus","language","toLowerCase","PreTag","String","replace","MarkdownRender","remarkPlugins","remarkMath","rehypePlugins","rehypeMathjax","components","markdown","Content","useParams","useState","isShowScrollBar","setIsShowScrollBar","useCallback","timer","clearTimeout","setTimeout","parseInt","showScrollBar","hideScrollBar","alt","src","profile","title","Footer","footer","App","main","exact","path","component","render","ReactDOM","StrictMode","basename","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba0a0bfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"catalog_content__2szC8\",\"container\":\"catalog_container__3zDOi\",\"profile\":\"catalog_profile__Spajr\",\"title\":\"catalog_title__1geJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__I2qJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__25Q7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"markdown_render_markdown__1POmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1QPhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content_content__JlU-S\",\"showScrollBar\":\"content_showScrollBar__2_wY_\",\"hideScrollBar\":\"content_hideScrollBar__Ut0_E\",\"container\":\"content_container__3jQNm\",\"title\":\"content_title__2Inb_\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useCallback } from 'react';\r\nimport styles from './index.module.scss';\r\nimport posts from '../../posts.json';\r\n\r\nexport const Catalog = () => {\r\n  return <div\r\n    className={styles.content}\r\n  >\r\n    {posts.map((post, index) =>\r\n      <div\r\n        key={post.id + index}\r\n        className={styles.container}\r\n      >\r\n          catalog\r\n      </div>\r\n    )}\r\n  </div>\r\n};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\n\r\nexport const Header = () => {\r\n  return <div className={styles.header}>\r\n    Navigater\r\n  </div>\r\n};\r\n","import React from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/cjs/styles/prism';\r\nimport Markdown from 'react-markdown';\r\nimport remarkMath from 'remark-math';\r\nimport rehypeMathjax from 'rehype-mathjax';\r\nimport styles from './index.module.scss';\r\nimport \"katex/dist/katex.min.css\"\r\n\r\nconst CodeBlock = {\r\n  code({ node, inline, className, children, ...props }: any) {\r\n    const match = /language-(\\w+)/.exec(className || '');\r\n    return !inline && match ? (\r\n      <SyntaxHighlighter\r\n        style={vscDarkPlus}\r\n        language={match[1].toLowerCase()}\r\n        PreTag='section'\r\n        {...props}\r\n        children={String(children).replace(/\\n$/, '')}\r\n      >\r\n      </SyntaxHighlighter>\r\n    ) : (\r\n      <code className={className} {...props}>\r\n        {children}\r\n      </code>\r\n    );\r\n  },\r\n};\r\n\r\nexport const MarkdownRender = (props: any) => {\r\n  return <Markdown\r\n    remarkPlugins={[remarkMath]}\r\n    rehypePlugins={[rehypeMathjax]}\r\n    components={CodeBlock}\r\n    className={styles.markdown}\r\n    {...props}\r\n  />\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styles from './index.module.scss';\r\nimport posts from '../../posts.json';\r\nimport { MarkdownRender } from '../markdown_render';\r\n\r\nexport const Content = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const [isShowScrollBar, setIsShowScrollBar] = useState(false);\r\n  const wheel = useCallback(() => {\r\n    let timer: any;\r\n    return () => {\r\n      clearTimeout(timer);\r\n      setIsShowScrollBar(true);\r\n      console.log(1)\r\n      timer = setTimeout(() => {\r\n        console.log(2)\r\n        setIsShowScrollBar(false);\r\n      }, 333);\r\n    }\r\n  }, [setIsShowScrollBar]);\r\n\r\n  const post = posts[parseInt(id)-1];\r\n  if(!post){\r\n    return null;\r\n  }\r\n\r\n  return <div\r\n    className={`${styles.content} ${isShowScrollBar ? styles.showScrollBar : styles.hideScrollBar}`}\r\n  // onWheel={wheel}\r\n  >\r\n      <div\r\n        className={styles.container}\r\n      >\r\n        <img alt='profile' src={post.profile} />\r\n        <div className={styles.title}>{post.title}</div>\r\n        <MarkdownRender children={post.content} />\r\n      </div>\r\n    {/* {posts.map((post, index) =>\r\n      <div\r\n        key={post.id + index}\r\n        className={styles.container}\r\n      >\r\n        <img alt='profile' src={post.profile} />\r\n        <div className={styles.title}>{post.title}</div>\r\n        <MarkdownRender children={post.content} />\r\n      </div>\r\n    )} */}\r\n  </div>\r\n};\r\n","import React  from 'react';\r\nimport styles from './index.module.scss';\r\n\r\nexport const Footer = () => {\r\n\r\n  return <div className={styles.footer}>\r\n    Navigater\r\n  </div>\r\n};\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport styles from './index.module.scss';\nimport { Header, Content, Catalog } from '../components';\nimport { Footer } from '../components/footer';\n\nexport const App = () => {\n  return <div\n    className={styles.main}\n  >\n    <Header />\n    <Route exact path='/' component={Catalog} />\n    <Route path='/:id' render={() => \n    <div>\n      <Content />\n      <Footer />\n    </div>} />\n  </div>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n、   <HashRouter basename=\"/blog\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}